{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyO9oGVICwUb6Ydb9y4L5nzS",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    },
    "widgets": {
      "application/vnd.jupyter.widget-state+json": {
        "7f0db637ee20488a82fe25aeac28b38a": {
          "model_module": "@jupyter-widgets/output",
          "model_name": "OutputModel",
          "model_module_version": "1.0.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/output",
            "_model_module_version": "1.0.0",
            "_model_name": "OutputModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/output",
            "_view_module_version": "1.0.0",
            "_view_name": "OutputView",
            "layout": "IPY_MODEL_fd521811cde747f6aefae49681929703",
            "msg_id": "",
            "outputs": [
              {
                "output_type": "display_data",
                "data": {
                  "text/plain": "Scanning contents     \u001b[38;2;114;156;31m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[35m100%\u001b[0m \u001b[32m12/12\u001b[0m \u001b[36m0:00:00\u001b[0m\n",
                  "text/html": "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">Scanning contents     <span style=\"color: #729c1f; text-decoration-color: #729c1f\">━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━</span> <span style=\"color: #800080; text-decoration-color: #800080\">100%</span> <span style=\"color: #008000; text-decoration-color: #008000\">12/12</span> <span style=\"color: #008080; text-decoration-color: #008080\">0:00:00</span>\n</pre>\n"
                },
                "metadata": {}
              }
            ]
          }
        },
        "fd521811cde747f6aefae49681929703": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "e894fb2e1d4f441a9c0f5612c0151175": {
          "model_module": "@jupyter-widgets/output",
          "model_name": "OutputModel",
          "model_module_version": "1.0.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/output",
            "_model_module_version": "1.0.0",
            "_model_name": "OutputModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/output",
            "_view_module_version": "1.0.0",
            "_view_name": "OutputView",
            "layout": "IPY_MODEL_e1390fb7a63b44e0a7659bf8f97f6913",
            "msg_id": "",
            "outputs": [
              {
                "output_type": "display_data",
                "data": {
                  "text/plain": "OCR                   \u001b[38;2;114;156;31m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[35m100%\u001b[0m \u001b[32m12/12\u001b[0m \u001b[36m0:00:00\u001b[0m\n",
                  "text/html": "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">OCR                   <span style=\"color: #729c1f; text-decoration-color: #729c1f\">━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━</span> <span style=\"color: #800080; text-decoration-color: #800080\">100%</span> <span style=\"color: #008000; text-decoration-color: #008000\">12/12</span> <span style=\"color: #008080; text-decoration-color: #008080\">0:00:00</span>\n</pre>\n"
                },
                "metadata": {}
              }
            ]
          }
        },
        "e1390fb7a63b44e0a7659bf8f97f6913": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "9ff3b04eaf5848469c9e0bb8560af0e3": {
          "model_module": "@jupyter-widgets/output",
          "model_name": "OutputModel",
          "model_module_version": "1.0.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/output",
            "_model_module_version": "1.0.0",
            "_model_name": "OutputModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/output",
            "_view_module_version": "1.0.0",
            "_view_name": "OutputView",
            "layout": "IPY_MODEL_bd7995a791d6462ab0d92341c031c529",
            "msg_id": "",
            "outputs": [
              {
                "output_type": "display_data",
                "data": {
                  "text/plain": "PDF/A conversion      \u001b[38;2;114;156;31m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[35m100%\u001b[0m \u001b[32m12/12\u001b[0m \u001b[36m0:00:00\u001b[0m\n",
                  "text/html": "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">PDF/A conversion      <span style=\"color: #729c1f; text-decoration-color: #729c1f\">━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━</span> <span style=\"color: #800080; text-decoration-color: #800080\">100%</span> <span style=\"color: #008000; text-decoration-color: #008000\">12/12</span> <span style=\"color: #008080; text-decoration-color: #008080\">0:00:00</span>\n</pre>\n"
                },
                "metadata": {}
              }
            ]
          }
        },
        "bd7995a791d6462ab0d92341c031c529": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "955044cddd5b44658c0ed64605ad0b74": {
          "model_module": "@jupyter-widgets/output",
          "model_name": "OutputModel",
          "model_module_version": "1.0.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/output",
            "_model_module_version": "1.0.0",
            "_model_name": "OutputModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/output",
            "_view_module_version": "1.0.0",
            "_view_name": "OutputView",
            "layout": "IPY_MODEL_b388359988c84ad989f182bade0854c5",
            "msg_id": "",
            "outputs": [
              {
                "output_type": "display_data",
                "data": {
                  "text/plain": "Linearizing           \u001b[38;2;114;156;31m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[35m100%\u001b[0m \u001b[32m100/100\u001b[0m \u001b[36m0:00:00\u001b[0m\n",
                  "text/html": "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">Linearizing           <span style=\"color: #729c1f; text-decoration-color: #729c1f\">━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━</span> <span style=\"color: #800080; text-decoration-color: #800080\">100%</span> <span style=\"color: #008000; text-decoration-color: #008000\">100/100</span> <span style=\"color: #008080; text-decoration-color: #008080\">0:00:00</span>\n</pre>\n"
                },
                "metadata": {}
              }
            ]
          }
        },
        "b388359988c84ad989f182bade0854c5": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "e5930eaa079b4d8f8b1c4e7ee8b4940e": {
          "model_module": "@jupyter-widgets/output",
          "model_name": "OutputModel",
          "model_module_version": "1.0.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/output",
            "_model_module_version": "1.0.0",
            "_model_name": "OutputModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/output",
            "_view_module_version": "1.0.0",
            "_view_name": "OutputView",
            "layout": "IPY_MODEL_85decf53519b4ca0bd584f2532ce119a",
            "msg_id": "",
            "outputs": [
              {
                "output_type": "display_data",
                "data": {
                  "text/plain": "Recompressing JPEGs   \u001b[38;2;114;156;31m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[35m  0%\u001b[0m \u001b[32m0/0\u001b[0m \u001b[36m-:--:--\u001b[0m\n",
                  "text/html": "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">Recompressing JPEGs   <span style=\"color: #729c1f; text-decoration-color: #729c1f\">━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━</span> <span style=\"color: #800080; text-decoration-color: #800080\">  0%</span> <span style=\"color: #008000; text-decoration-color: #008000\">0/0</span> <span style=\"color: #008080; text-decoration-color: #008080\">-:--:--</span>\n</pre>\n"
                },
                "metadata": {}
              }
            ]
          }
        },
        "85decf53519b4ca0bd584f2532ce119a": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "e024150770ee46df87af512c75e92261": {
          "model_module": "@jupyter-widgets/output",
          "model_name": "OutputModel",
          "model_module_version": "1.0.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/output",
            "_model_module_version": "1.0.0",
            "_model_name": "OutputModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/output",
            "_view_module_version": "1.0.0",
            "_view_name": "OutputView",
            "layout": "IPY_MODEL_3fb619d84a464fc0b55961d9ca263ede",
            "msg_id": "",
            "outputs": [
              {
                "output_type": "display_data",
                "data": {
                  "text/plain": "Deflating JPEGs       \u001b[38;2;114;156;31m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[35m100%\u001b[0m \u001b[32m12/12\u001b[0m \u001b[36m0:00:00\u001b[0m\n",
                  "text/html": "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">Deflating JPEGs       <span style=\"color: #729c1f; text-decoration-color: #729c1f\">━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━</span> <span style=\"color: #800080; text-decoration-color: #800080\">100%</span> <span style=\"color: #008000; text-decoration-color: #008000\">12/12</span> <span style=\"color: #008080; text-decoration-color: #008080\">0:00:00</span>\n</pre>\n"
                },
                "metadata": {}
              }
            ]
          }
        },
        "3fb619d84a464fc0b55961d9ca263ede": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "4da9f02a46d2483e8434df006ecc4be5": {
          "model_module": "@jupyter-widgets/output",
          "model_name": "OutputModel",
          "model_module_version": "1.0.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/output",
            "_model_module_version": "1.0.0",
            "_model_name": "OutputModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/output",
            "_view_module_version": "1.0.0",
            "_view_name": "OutputView",
            "layout": "IPY_MODEL_f73d805c027947a4b85805a87496284f",
            "msg_id": "",
            "outputs": [
              {
                "output_type": "display_data",
                "data": {
                  "text/plain": "JBIG2                 \u001b[38;2;114;156;31m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[35m  0%\u001b[0m \u001b[32m0/0\u001b[0m \u001b[36m-:--:--\u001b[0m\n",
                  "text/html": "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">JBIG2                 <span style=\"color: #729c1f; text-decoration-color: #729c1f\">━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━</span> <span style=\"color: #800080; text-decoration-color: #800080\">  0%</span> <span style=\"color: #008000; text-decoration-color: #008000\">0/0</span> <span style=\"color: #008080; text-decoration-color: #008080\">-:--:--</span>\n</pre>\n"
                },
                "metadata": {}
              }
            ]
          }
        },
        "f73d805c027947a4b85805a87496284f": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        }
      }
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/peakprogrammerrrrr/Easy-data-structures-machine-learning/blob/main/PDF%20Processor\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "#PDF scanner"
      ],
      "metadata": {
        "id": "xVWhrXM_yg2x"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 9,
      "metadata": {
        "id": "yXEs0xuKyIY0"
      },
      "outputs": [],
      "source": [
        "#Lets start over but this time make sure to build a more\n",
        "#readable and maintainable structure for our code"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "!apt-get install tesseract-ocr"
      ],
      "metadata": {
        "collapsed": true,
        "id": "CObvognwAL0Q"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        " !apt install ghostscript"
      ],
      "metadata": {
        "collapsed": true,
        "id": "3PikPtre9Wyn"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "import subprocess\n",
        "import sys\n",
        "\n",
        "def install_package(package):\n",
        "    subprocess.check_call([sys.executable, '-m', 'pip', 'install', package])\n",
        "\n",
        "def install_dependencies():\n",
        "  packages = [\n",
        "        'ocrmypdf',\n",
        "        'pdfplumber==0.11.4',\n",
        "        'PyPDF2',\n",
        "        'img2table',\n",
        "        'pytesseract',\n",
        "  ]\n",
        "  for package in packages:\n",
        "    try:\n",
        "      install_package(package)\n",
        "    except subprocess.CalledProcessError as e:\n",
        "      print(f'Failed to install {package}: {e}')\n",
        "      raise\n",
        "\n",
        "install_dependencies()"
      ],
      "metadata": {
        "id": "T2tXjfZAyvF7"
      },
      "execution_count": 86,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "import os\n",
        "import ocrmypdf\n",
        "import pdfplumber\n",
        "import logging\n",
        "import re"
      ],
      "metadata": {
        "id": "NbVFpimY05cc"
      },
      "execution_count": 4,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "logging.basicConfig(level = logging.INFO, format = '%(asctime)s - %(levelname)s - %(message)s')"
      ],
      "metadata": {
        "id": "gf8pi1AZ1QQ1"
      },
      "execution_count": 81,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "class PDFProcessor:\n",
        "    def __init__(self,input_path, output_path = 'output.pdf'):\n",
        "        self.input_path = input_path\n",
        "        self.output_path = output_path\n",
        "        self.filename = os.path.basename(input_path)\n",
        "\n",
        "    def run_ocr(self):\n",
        "      try:\n",
        "        ocrmypdf.ocr(self.input_path, self.output_path)\n",
        "        logging.info(f'OCR completed: {self.output_path}')\n",
        "      except Exception as e:\n",
        "        logging.error(f'OCR failed: {e}')\n",
        "        raise\n",
        "\n",
        "    def extract_text(self):\n",
        "      try:\n",
        "        with pdfplumber.open(self.output_path) as pdf:\n",
        "          text = ''\n",
        "          for page in pdf.pages:\n",
        "            text += page.extract_text()\n",
        "        logging.info(\"Text extraction completed\")\n",
        "        return text\n",
        "      except Exception as e:\n",
        "        logging.error(f'Text extraction failed: {e}')\n",
        "        raise\n",
        "\n",
        "    def summarize(self):\n",
        "      return f'Proceed {self.filename} and saved output to {self.output_path}'"
      ],
      "metadata": {
        "id": "hArYXhDA7jc3"
      },
      "execution_count": 87,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "input_path = ('/content/3031358-TTI_SN20210823-004(01SEP).pdf')\n",
        "processor = PDFProcessor(input_path)\n",
        "processor.run_ocr()\n",
        "text = processor.extract_text()\n",
        "summary = processor.summarize()\n",
        "print(summary)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000,
          "referenced_widgets": [
            "7f0db637ee20488a82fe25aeac28b38a",
            "fd521811cde747f6aefae49681929703",
            "e894fb2e1d4f441a9c0f5612c0151175",
            "e1390fb7a63b44e0a7659bf8f97f6913",
            "9ff3b04eaf5848469c9e0bb8560af0e3",
            "bd7995a791d6462ab0d92341c031c529",
            "955044cddd5b44658c0ed64605ad0b74",
            "b388359988c84ad989f182bade0854c5",
            "e5930eaa079b4d8f8b1c4e7ee8b4940e",
            "85decf53519b4ca0bd584f2532ce119a",
            "e024150770ee46df87af512c75e92261",
            "3fb619d84a464fc0b55961d9ca263ede",
            "4da9f02a46d2483e8434df006ecc4be5",
            "f73d805c027947a4b85805a87496284f"
          ]
        },
        "collapsed": true,
        "id": "b4S25v0E82of",
        "outputId": "49e8cd3e-6ed3-4c13-8e7c-813f851db0d9"
      },
      "execution_count": 88,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "Output()"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "version_major": 2,
              "version_minor": 0,
              "model_id": "7f0db637ee20488a82fe25aeac28b38a"
            }
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [],
            "text/html": [
              "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"></pre>\n"
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "\n"
            ],
            "text/html": [
              "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">\n",
              "</pre>\n"
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "Output()"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "version_major": 2,
              "version_minor": 0,
              "model_id": "e894fb2e1d4f441a9c0f5612c0151175"
            }
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "WARNING:ocrmypdf._exec.tesseract:[tesseract] lots of diacritics - possibly poor OCR\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [],
            "text/html": [
              "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"></pre>\n"
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "\n"
            ],
            "text/html": [
              "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">\n",
              "</pre>\n"
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "Output()"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "version_major": 2,
              "version_minor": 0,
              "model_id": "9ff3b04eaf5848469c9e0bb8560af0e3"
            }
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [],
            "text/html": [
              "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"></pre>\n"
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "\n"
            ],
            "text/html": [
              "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">\n",
              "</pre>\n"
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "ERROR:ocrmypdf._exec.ghostscript:GPL Ghostscript 9.55.0 (2021-09-27)\n",
            "Copyright (C) 2021 Artifex Software, Inc.  All rights reserved.\n",
            "This software is supplied under the GNU AGPLv3 and comes with NO WARRANTY:\n",
            "see the file COPYING for details.\n",
            "Processing pages 1 through 12.\n",
            "Page 1\n",
            "                 Output may be incorrect.\n",
            "\n",
            "   \n",
            "ERROR:ocrmypdf._exec.ghostscript:(suppressed 12 repeated lines)\n",
            "ERROR:ocrmypdf._exec.ghostscript: Error: Invalid 0.0 horizontal text scaling given for Tz\n",
            "Page 2\n",
            "                 Output may be incorrect.\n",
            "\n",
            "   \n",
            "ERROR:ocrmypdf._exec.ghostscript: Error: Invalid 0.0 horizontal text scaling given for Tz\n",
            "                 Output may be incorrect.\n",
            "\n",
            "   \n",
            "ERROR:ocrmypdf._exec.ghostscript:(suppressed 1 repeated lines)\n",
            "ERROR:ocrmypdf._exec.ghostscript: Error: Invalid 0.0 horizontal text scaling given for Tz\n",
            "Page 3\n",
            "                 Output may be incorrect.\n",
            "\n",
            "   \n",
            "ERROR:ocrmypdf._exec.ghostscript: Error: Invalid 0.0 horizontal text scaling given for Tz\n",
            "Page 4\n",
            "                 Output may be incorrect.\n",
            "\n",
            "   \n",
            "ERROR:ocrmypdf._exec.ghostscript: Error: Invalid 0.0 horizontal text scaling given for Tz\n",
            "                 Output may be incorrect.\n",
            "\n",
            "   \n",
            "ERROR:ocrmypdf._exec.ghostscript: Error: Invalid 0.0 horizontal text scaling given for Tz\n",
            "Page 5\n",
            "                 Output may be incorrect.\n",
            "\n",
            "   \n",
            "ERROR:ocrmypdf._exec.ghostscript:(suppressed 5 repeated lines)\n",
            "ERROR:ocrmypdf._exec.ghostscript: Error: Invalid 0.0 horizontal text scaling given for Tz\n",
            "Page 6\n",
            "                 Output may be incorrect.\n",
            "\n",
            "   \n",
            "ERROR:ocrmypdf._exec.ghostscript: Error: Invalid 0.0 horizontal text scaling given for Tz\n",
            "                 Output may be incorrect.\n",
            "\n",
            "   \n",
            "ERROR:ocrmypdf._exec.ghostscript:(suppressed 1 repeated lines)\n",
            "ERROR:ocrmypdf._exec.ghostscript: Error: Invalid 0.0 horizontal text scaling given for Tz\n",
            "Page 7\n",
            "                 Output may be incorrect.\n",
            "\n",
            "   \n",
            "ERROR:ocrmypdf._exec.ghostscript: Error: Invalid 0.0 horizontal text scaling given for Tz\n",
            "                 Output may be incorrect.\n",
            "\n",
            "   \n",
            "ERROR:ocrmypdf._exec.ghostscript:(suppressed 3 repeated lines)\n",
            "ERROR:ocrmypdf._exec.ghostscript: Error: Invalid 0.0 horizontal text scaling given for Tz\n",
            "Page 8\n",
            "                 Output may be incorrect.\n",
            "\n",
            "   \n",
            "ERROR:ocrmypdf._exec.ghostscript: Error: Invalid 0.0 horizontal text scaling given for Tz\n",
            "                 Output may be incorrect.\n",
            "\n",
            "   \n",
            "ERROR:ocrmypdf._exec.ghostscript: Error: Invalid 0.0 horizontal text scaling given for Tz\n",
            "Page 9\n",
            "                 Output may be incorrect.\n",
            "\n",
            "   \n",
            "ERROR:ocrmypdf._exec.ghostscript:(suppressed 2 repeated lines)\n",
            "ERROR:ocrmypdf._exec.ghostscript: Error: Invalid 0.0 horizontal text scaling given for Tz\n",
            "Page 10\n",
            "                 Output may be incorrect.\n",
            "\n",
            "   \n",
            "ERROR:ocrmypdf._exec.ghostscript: Error: Invalid 0.0 horizontal text scaling given for Tz\n",
            "Page 11\n",
            "                 Output may be incorrect.\n",
            "\n",
            "   \n",
            "ERROR:ocrmypdf._exec.ghostscript: Error: Invalid 0.0 horizontal text scaling given for Tz\n",
            "                 Output may be incorrect.\n",
            "\n",
            "   \n",
            "ERROR:ocrmypdf._exec.ghostscript: Error: Invalid 0.0 horizontal text scaling given for Tz\n",
            "Page 12\n",
            "\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "Output()"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "version_major": 2,
              "version_minor": 0,
              "model_id": "955044cddd5b44658c0ed64605ad0b74"
            }
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [],
            "text/html": [
              "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"></pre>\n"
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "\n"
            ],
            "text/html": [
              "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">\n",
              "</pre>\n"
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "ERROR:ocrmypdf.optimize:xref 52: While extracting this image, an error occurred\n",
            "Traceback (most recent call last):\n",
            "  File \"/usr/local/lib/python3.10/dist-packages/ocrmypdf/optimize.py\", line 326, in extract_images\n",
            "    result = extract_fn(\n",
            "  File \"/usr/local/lib/python3.10/dist-packages/ocrmypdf/optimize.py\", line 220, in extract_image_generic\n",
            "    pim.as_pil_image().save(png_name(root, xref))\n",
            "  File \"/usr/local/lib/python3.10/dist-packages/pikepdf/models/image.py\", line 744, in as_pil_image\n",
            "    return Image.open(bio)\n",
            "  File \"/usr/local/lib/python3.10/dist-packages/PIL/Image.py\", line 3283, in open\n",
            "    rawmode = mode\n",
            "PIL.UnidentifiedImageError: cannot identify image file <_io.BytesIO object at 0x7fe2aa4ebb50>\n",
            "ERROR:ocrmypdf.optimize:xref 60: While extracting this image, an error occurred\n",
            "Traceback (most recent call last):\n",
            "  File \"/usr/local/lib/python3.10/dist-packages/ocrmypdf/optimize.py\", line 326, in extract_images\n",
            "    result = extract_fn(\n",
            "  File \"/usr/local/lib/python3.10/dist-packages/ocrmypdf/optimize.py\", line 220, in extract_image_generic\n",
            "    pim.as_pil_image().save(png_name(root, xref))\n",
            "  File \"/usr/local/lib/python3.10/dist-packages/pikepdf/models/image.py\", line 744, in as_pil_image\n",
            "    return Image.open(bio)\n",
            "  File \"/usr/local/lib/python3.10/dist-packages/PIL/Image.py\", line 3283, in open\n",
            "    rawmode = mode\n",
            "PIL.UnidentifiedImageError: cannot identify image file <_io.BytesIO object at 0x7fe2aa4eb3d0>\n",
            "ERROR:ocrmypdf.optimize:xref 68: While extracting this image, an error occurred\n",
            "Traceback (most recent call last):\n",
            "  File \"/usr/local/lib/python3.10/dist-packages/ocrmypdf/optimize.py\", line 326, in extract_images\n",
            "    result = extract_fn(\n",
            "  File \"/usr/local/lib/python3.10/dist-packages/ocrmypdf/optimize.py\", line 220, in extract_image_generic\n",
            "    pim.as_pil_image().save(png_name(root, xref))\n",
            "  File \"/usr/local/lib/python3.10/dist-packages/pikepdf/models/image.py\", line 744, in as_pil_image\n",
            "    return Image.open(bio)\n",
            "  File \"/usr/local/lib/python3.10/dist-packages/PIL/Image.py\", line 3283, in open\n",
            "    rawmode = mode\n",
            "PIL.UnidentifiedImageError: cannot identify image file <_io.BytesIO object at 0x7fe2a9234400>\n",
            "ERROR:ocrmypdf.optimize:xref 74: While extracting this image, an error occurred\n",
            "Traceback (most recent call last):\n",
            "  File \"/usr/local/lib/python3.10/dist-packages/ocrmypdf/optimize.py\", line 326, in extract_images\n",
            "    result = extract_fn(\n",
            "  File \"/usr/local/lib/python3.10/dist-packages/ocrmypdf/optimize.py\", line 220, in extract_image_generic\n",
            "    pim.as_pil_image().save(png_name(root, xref))\n",
            "  File \"/usr/local/lib/python3.10/dist-packages/pikepdf/models/image.py\", line 744, in as_pil_image\n",
            "    return Image.open(bio)\n",
            "  File \"/usr/local/lib/python3.10/dist-packages/PIL/Image.py\", line 3283, in open\n",
            "    rawmode = mode\n",
            "PIL.UnidentifiedImageError: cannot identify image file <_io.BytesIO object at 0x7fe2a9234400>\n",
            "ERROR:ocrmypdf.optimize:xref 81: While extracting this image, an error occurred\n",
            "Traceback (most recent call last):\n",
            "  File \"/usr/local/lib/python3.10/dist-packages/ocrmypdf/optimize.py\", line 326, in extract_images\n",
            "    result = extract_fn(\n",
            "  File \"/usr/local/lib/python3.10/dist-packages/ocrmypdf/optimize.py\", line 220, in extract_image_generic\n",
            "    pim.as_pil_image().save(png_name(root, xref))\n",
            "  File \"/usr/local/lib/python3.10/dist-packages/pikepdf/models/image.py\", line 744, in as_pil_image\n",
            "    return Image.open(bio)\n",
            "  File \"/usr/local/lib/python3.10/dist-packages/PIL/Image.py\", line 3283, in open\n",
            "    rawmode = mode\n",
            "PIL.UnidentifiedImageError: cannot identify image file <_io.BytesIO object at 0x7fe2a9234400>\n",
            "ERROR:ocrmypdf.optimize:xref 87: While extracting this image, an error occurred\n",
            "Traceback (most recent call last):\n",
            "  File \"/usr/local/lib/python3.10/dist-packages/ocrmypdf/optimize.py\", line 326, in extract_images\n",
            "    result = extract_fn(\n",
            "  File \"/usr/local/lib/python3.10/dist-packages/ocrmypdf/optimize.py\", line 220, in extract_image_generic\n",
            "    pim.as_pil_image().save(png_name(root, xref))\n",
            "  File \"/usr/local/lib/python3.10/dist-packages/pikepdf/models/image.py\", line 744, in as_pil_image\n",
            "    return Image.open(bio)\n",
            "  File \"/usr/local/lib/python3.10/dist-packages/PIL/Image.py\", line 3283, in open\n",
            "    rawmode = mode\n",
            "PIL.UnidentifiedImageError: cannot identify image file <_io.BytesIO object at 0x7fe2a9234400>\n",
            "ERROR:ocrmypdf.optimize:xref 92: While extracting this image, an error occurred\n",
            "Traceback (most recent call last):\n",
            "  File \"/usr/local/lib/python3.10/dist-packages/ocrmypdf/optimize.py\", line 326, in extract_images\n",
            "    result = extract_fn(\n",
            "  File \"/usr/local/lib/python3.10/dist-packages/ocrmypdf/optimize.py\", line 220, in extract_image_generic\n",
            "    pim.as_pil_image().save(png_name(root, xref))\n",
            "  File \"/usr/local/lib/python3.10/dist-packages/pikepdf/models/image.py\", line 744, in as_pil_image\n",
            "    return Image.open(bio)\n",
            "  File \"/usr/local/lib/python3.10/dist-packages/PIL/Image.py\", line 3283, in open\n",
            "    rawmode = mode\n",
            "PIL.UnidentifiedImageError: cannot identify image file <_io.BytesIO object at 0x7fe2a9234400>\n",
            "ERROR:ocrmypdf.optimize:xref 98: While extracting this image, an error occurred\n",
            "Traceback (most recent call last):\n",
            "  File \"/usr/local/lib/python3.10/dist-packages/ocrmypdf/optimize.py\", line 326, in extract_images\n",
            "    result = extract_fn(\n",
            "  File \"/usr/local/lib/python3.10/dist-packages/ocrmypdf/optimize.py\", line 220, in extract_image_generic\n",
            "    pim.as_pil_image().save(png_name(root, xref))\n",
            "  File \"/usr/local/lib/python3.10/dist-packages/pikepdf/models/image.py\", line 744, in as_pil_image\n",
            "    return Image.open(bio)\n",
            "  File \"/usr/local/lib/python3.10/dist-packages/PIL/Image.py\", line 3283, in open\n",
            "    rawmode = mode\n",
            "PIL.UnidentifiedImageError: cannot identify image file <_io.BytesIO object at 0x7fe2a9234400>\n",
            "ERROR:ocrmypdf.optimize:xref 101: While extracting this image, an error occurred\n",
            "Traceback (most recent call last):\n",
            "  File \"/usr/local/lib/python3.10/dist-packages/ocrmypdf/optimize.py\", line 326, in extract_images\n",
            "    result = extract_fn(\n",
            "  File \"/usr/local/lib/python3.10/dist-packages/ocrmypdf/optimize.py\", line 220, in extract_image_generic\n",
            "    pim.as_pil_image().save(png_name(root, xref))\n",
            "  File \"/usr/local/lib/python3.10/dist-packages/pikepdf/models/image.py\", line 744, in as_pil_image\n",
            "    return Image.open(bio)\n",
            "  File \"/usr/local/lib/python3.10/dist-packages/PIL/Image.py\", line 3283, in open\n",
            "    rawmode = mode\n",
            "PIL.UnidentifiedImageError: cannot identify image file <_io.BytesIO object at 0x7fe2a9234400>\n",
            "ERROR:ocrmypdf.optimize:xref 104: While extracting this image, an error occurred\n",
            "Traceback (most recent call last):\n",
            "  File \"/usr/local/lib/python3.10/dist-packages/ocrmypdf/optimize.py\", line 326, in extract_images\n",
            "    result = extract_fn(\n",
            "  File \"/usr/local/lib/python3.10/dist-packages/ocrmypdf/optimize.py\", line 220, in extract_image_generic\n",
            "    pim.as_pil_image().save(png_name(root, xref))\n",
            "  File \"/usr/local/lib/python3.10/dist-packages/pikepdf/models/image.py\", line 744, in as_pil_image\n",
            "    return Image.open(bio)\n",
            "  File \"/usr/local/lib/python3.10/dist-packages/PIL/Image.py\", line 3283, in open\n",
            "    rawmode = mode\n",
            "PIL.UnidentifiedImageError: cannot identify image file <_io.BytesIO object at 0x7fe2a9234400>\n",
            "ERROR:ocrmypdf.optimize:xref 108: While extracting this image, an error occurred\n",
            "Traceback (most recent call last):\n",
            "  File \"/usr/local/lib/python3.10/dist-packages/ocrmypdf/optimize.py\", line 326, in extract_images\n",
            "    result = extract_fn(\n",
            "  File \"/usr/local/lib/python3.10/dist-packages/ocrmypdf/optimize.py\", line 220, in extract_image_generic\n",
            "    pim.as_pil_image().save(png_name(root, xref))\n",
            "  File \"/usr/local/lib/python3.10/dist-packages/pikepdf/models/image.py\", line 744, in as_pil_image\n",
            "    return Image.open(bio)\n",
            "  File \"/usr/local/lib/python3.10/dist-packages/PIL/Image.py\", line 3283, in open\n",
            "    rawmode = mode\n",
            "PIL.UnidentifiedImageError: cannot identify image file <_io.BytesIO object at 0x7fe2a9234400>\n",
            "ERROR:ocrmypdf.optimize:xref 112: While extracting this image, an error occurred\n",
            "Traceback (most recent call last):\n",
            "  File \"/usr/local/lib/python3.10/dist-packages/ocrmypdf/optimize.py\", line 326, in extract_images\n",
            "    result = extract_fn(\n",
            "  File \"/usr/local/lib/python3.10/dist-packages/ocrmypdf/optimize.py\", line 220, in extract_image_generic\n",
            "    pim.as_pil_image().save(png_name(root, xref))\n",
            "  File \"/usr/local/lib/python3.10/dist-packages/pikepdf/models/image.py\", line 744, in as_pil_image\n",
            "    return Image.open(bio)\n",
            "  File \"/usr/local/lib/python3.10/dist-packages/PIL/Image.py\", line 3283, in open\n",
            "    rawmode = mode\n",
            "PIL.UnidentifiedImageError: cannot identify image file <_io.BytesIO object at 0x7fe2a9234400>\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "Output()"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "version_major": 2,
              "version_minor": 0,
              "model_id": "e5930eaa079b4d8f8b1c4e7ee8b4940e"
            }
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [],
            "text/html": [
              "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"></pre>\n"
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "\n"
            ],
            "text/html": [
              "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">\n",
              "</pre>\n"
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "Output()"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "version_major": 2,
              "version_minor": 0,
              "model_id": "e024150770ee46df87af512c75e92261"
            }
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [],
            "text/html": [
              "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"></pre>\n"
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "\n"
            ],
            "text/html": [
              "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">\n",
              "</pre>\n"
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "Output()"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "version_major": 2,
              "version_minor": 0,
              "model_id": "4da9f02a46d2483e8434df006ecc4be5"
            }
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [],
            "text/html": [
              "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"></pre>\n"
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "\n"
            ],
            "text/html": [
              "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">\n",
              "</pre>\n"
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Proceed 3031358-TTI_SN20210823-004(01SEP).pdf and saved output to output.pdf\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "with pdfplumber.open('/content/output.pdf') as pdf:\n",
        "    page = pdf.pages[0]\n",
        "    text = page.extract_text()\n",
        "    print(text)"
      ],
      "metadata": {
        "collapsed": true,
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "JbMOJ7qPBjAQ",
        "outputId": "772fb978-ed63-4dc7-dc93-c3f29ca6831f"
      },
      "execution_count": 89,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "TTI Electronics Asia Pte Ltd\n",
            "3 CHANGI NORTH STREET 2, LOGIS TECH,\n",
            "4th FLOOR, SINGAPORE 498827.\n",
            "TEL: (65) 67889200 _ FAX: (65) 67889300\n",
            "CR NO:200001449C\n",
            "SHIPMENT No: SN20210823-004\n",
            "CUST ID: MYEOO02\n",
            "INVOICE DATE: 2021-08-26\n",
            "SOLD TO: SHIP TO:\n",
            "ESCATEC ELECTRONICS SDN BHD ESCATEC ELECTRONICS SDN BHD\n",
            "FREE INDUSTRIAL ZONE III BAYAN 107, JALAN HILIR SUNGAT\n",
            "KELUANG 5,\n",
            "LEPAS, PENANG, MALAYSIA. BAYAN LEPAS, PENANG\n",
            "MALAYSIA,\n",
            "COUNTRY: MALAYSIA COUNTRY: MALAYSIA\n",
            "ZIP: 11900 ZIP: 11900\n",
            "CUST P/O# | Rev/] INVOICE DESCRIPTION LAST PORT OF | QTY IN EXTENDE\n",
            "custP/N | tine | No. [UINE*] MFR] MFRP/N | ccuepute B# | emparKation | Preces | UNIT PRICE! 5 price\n",
            "021186407 pemee eso 00s YAG | CCO4023RN | CAPACITOR,CERAMIC, ‘SINGAPORE 10,000 | 0.00077, 7.70)\n",
            "001297, — POSBN101 8532C2H4I0P:0 20 41704947, Oo n oo\n",
            "021188091 285923801| 011 | KBR | APTBi615S DISCRETE SINGAPORE | 30,000 0.07500] 2,250.00\n",
            "3025386) 4 URKCGKC- 8541400000 WANA ® ne)\n",
            "FOL\n",
            "a MS\n",
            "(021188416 286463601 001 | KBR | APTBI615S DISCRETE SINGAPORE | 34,000 0.07500] 2,550.00}\n",
            "3025386 URKtCoG KC- 8541400000 oh |) [7D]\n",
            "021188599 286889402 fF 002 | SLN |{SIP32401AD] TRANSISTOR, OTHER SINGAPORE | 95 1,000 0.14060] 13,919.40]\n",
            "sane NP-T1GE4 85412900 410994)\n",
            "021188599 286865402 | [O03 | SUN |SIP3240iA0| TRANSISTOR, OTHER | SINGAPORE | 102,000 0.14060] 14,341.20\n",
            "3025420 / NP-TIGE4 85412900 @ Wg\n",
            "021188599 286889402 005 | DUM |\"2868894/0 MISC ‘SINGAPORE 1 7170.60000] 7,170.60\n",
            "2 9999999999\n",
            "021188599 |286889402| 006 | DUM |*286889470 MISC ‘SINGAPORE 1 7170.60000[ 7,170.60}\n",
            "Zz 3 9999999999,\n",
            "021188607 )286890405| 017 | KBR | APTB1615S DISCRETE SINGAPORE 3,000 0.07500] 750.00\n",
            "3025386 o r - URK(FC OG .K C- - 8541400000 6413044 f |r ©» || 165)\n",
            "021188669 286891205| 005 | MUR |GRM188R61 CAPACITOR, SINGAPORE | 4,000 ‘0.00390 15.60|\n",
            "1003240 vi CLOSKA12D| —_sCERoAMmIC,oCHI P [0H09950 | O [>>>t|o\n",
            "021188695 286915507| 016 | YAG | CCO402JRN | CAPACITOR,CERAMIC,| SINGAPORE | 160,000 0.00064 102.40\n",
            "sonar PO9BN120 CHIP ORE | (©\n",
            "8532240020 att \\\n",
            "021188683 [286926108] 003 | YAG |CCO402KRx| CAPACITOR,CERAMIC, SINGAPORE | 20,000 0.00059) 11.80)\n",
            "0038495 5R7BB104 CHIP: Ss> @ rf\n",
            "8532240020\n",
            "021188683 286926108 || 004 | YAG |CCO603KRX|CAPACITOR,CERAMIC,| SINGAPORE | 4,000 0.00227| 9.08\n",
            "ooassBy 7R8BB103 CHIP © hd\n",
            "8532240020\n",
            "SHIP VIA/TERM: DHL/PRPAID RES= mo R eceived in Good orderby\n",
            "WAY BILL: 6958549861 y 2O P REZA S Nee,\n",
            "REMARKS: ELECTRONICS LO” Bes eu\\\n",
            "= aN TRE oO Signature / Company Stamp\n",
            "User: a Date/Time/Vehicle Number\n",
            "Page 1 of\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "class NumberExtractor:\n",
        "  def __init__(self,text):\n",
        "    self.text = text\n",
        "    self.po_invoice_numbers = self.extract_numbers(r'\\b\\d{9}\\b')\n",
        "    self.customer_part_numbers = self.extract_numbers(r'\\b\\d{7}\\b')\n",
        "    self.po_index = 2\n",
        "    self.cp_index = 2\n",
        "\n",
        "  def extract_numbers(self,patterns):\n",
        "    return re.findall(patterns, self.text)\n",
        "\n",
        "  def get_next_po_invoice_number(self):\n",
        "    if self.po_index < len(self.po_invoice_numbers):\n",
        "       number = self.po_invoice_numbers[self.po_index]\n",
        "       self.po_index += 1\n",
        "       return f\"Purchase Order (P/O) or Invoice No: {number}\"\n",
        "    else:\n",
        "        return \"No more Invoice Numbers available.\"\n",
        "\n",
        "  def get_next_customer_part_number(self):\n",
        "    if self.cp_index < len(self.customer_part_numbers):\n",
        "      number = self.customer_part_numbers[self.cp_index]\n",
        "      self.cp_index += 1\n",
        "      return f'Customer Part Number (Customer P/N): {number}'\n",
        "    else:\n",
        "      return \"No more Customer Part Numbers available.\""
      ],
      "metadata": {
        "id": "ukApMI6DueM1"
      },
      "execution_count": 90,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "extractor = NumberExtractor(text)\n",
        "\n",
        "print(extractor.get_next_po_invoice_number())\n",
        "print(extractor.get_next_po_invoice_number())\n",
        "print(extractor.get_next_customer_part_number())\n",
        "print(extractor.get_next_customer_part_number())"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "collapsed": true,
        "id": "Gqg1JGfjKXpm",
        "outputId": "e0f1a5b7-713d-4e36-f5e1-5926ceb98bb3"
      },
      "execution_count": 91,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Purchase Order (P/O) or Invoice No: 285923801\n",
            "Purchase Order (P/O) or Invoice No: 021188416\n",
            "Customer Part Number (Customer P/N): 3025420\n",
            "Customer Part Number (Customer P/N): 2868894\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Invoice Date\n",
        "date_pattern = r\"\\b\\d{2}/\\d{2}/\\d{4}\\b|\\b\\d{2}-\\d{2}-\\d{4}\\b|\\b\\d{4}-\\d{2}-\\d{2}\\b\"\n",
        "dates = re.findall(date_pattern, text)\n",
        "\n",
        "if dates:\n",
        "    print(\"Extracted Dates:\")\n",
        "    for i, date in enumerate(dates):\n",
        "        print(f\"Date {i+1}: {date}\")\n",
        "\n",
        "    print(\"First Date:\", dates[0])\n",
        "\n",
        "    print(\"Last Date:\", dates[-1])\n",
        "\n",
        "else:\n",
        "    print(\"No dates found in the text.\")\n",
        "\n",
        "\n",
        "for date in dates:\n",
        "    print(\"Date found:\", date)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "collapsed": true,
        "id": "R4KzX9KfB-v_",
        "outputId": "02872a48-37fd-440d-f456-b2a64498bc10"
      },
      "execution_count": 92,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Extracted Dates:\n",
            "Date 1: 2021-08-26\n",
            "First Date: 2021-08-26\n",
            "Last Date: 2021-08-26\n",
            "Date found: 2021-08-26\n"
          ]
        }
      ]
    }
  ]
}